plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

ext {
    projectGroup = "'ru.ob11to"
    projectVersion = "0.0.1"

    mapstructVersion = "1.4.2.Final"
    springdoc = "2.0.3"
}

def projectVersion = projectVersion
def projectGroup = projectGroup
def release = "false"

def isReleaseVersion = release ? release.toBoolean() : false

group = projectGroup ?: "ru.ob11to.lib"
version = isReleaseVersion ? projectVersion : "${projectVersion}-SNAPSHOT"

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'ru.ob11to:spring-logging-starter:1.0'

    implementation 'org.liquibase:liquibase-core'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdoc}"

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql:1.19.7'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion '8.7'
}